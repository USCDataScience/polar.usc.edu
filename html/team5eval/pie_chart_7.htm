<!DOCTYPE html>
<html>
  <head>    
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">
    <title>Language diversity</title>

<!-- based on https://gist.github.com/enjalot/1203641 -->

    <script type="text/javascript" src="../../js/d3.min.js"></script>

    <style type="text/css">
        .slice text {
            font-size: 8pt;
            font-family: Arial;
        }   
         div.tooltip {	
                position: absolute;			
                text-align: center;			
                width: 90px;					
                height: 28px;					
                padding: 2px;				
                font: 12px sans-serif;		
                background: white;	
                border: 0px;		
                border-radius: 8px;			
                pointer-events: none;
                color: black;
            }
    </style>
  </head>
  <body>
    <script type="text/javascript">

    var w = 1000,                        //width
    h = 1000,                            //height
    r = 400,                            //radius
    color = d3.scale.category20c();     //builtin range of colors

    var rawData = {"Italian":22206,"Polish":686,"Russian":1086,"German":2772,"Estonian":21654,"Swedish":213,"English":490401,"French":15018,"Icelandic":299,"Portuguese":1301,"Danish":505,"Finnish":707,"Spanish":2338,"Hungarian":4965,"Thai":1822,"Greek":635,"Dutch":1618,"Norwegian":32106};

    data = Object.keys(rawData).map(function(k) {
        return {label: k, value: rawData[k]};
    });
    
    var div = d3.select("body").append("div")	
    .attr("class", "tooltip")				
    .style("opacity", 0);
    
    
    var vis = d3.select("body")
        .append("svg:svg")              //create the SVG element inside the <body>
        .data([data])                   //associate our data with the document
            .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
            .attr("height", h)
        .append("svg:g")                //make a group to hold our pie chart
            .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius

    var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
        .outerRadius(r);

    var pie = d3.layout.pie()           //this will create arc data for us given a list of values
        .value(function(d) { return d.value; });    //we must tell it out to access the value of each element in our data array

    var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
        .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties) 
        .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
            .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                .attr("class", "slice");    //allow us to style things in the slices (like text)

        arcs.append("svg:path")
                .attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
                .attr("d", arc)
         .on("mouseover",function(d, i) { 
                div.transition()		
                .duration(200)		
                .style("opacity", .9);		
            div	.html( "Language: "+data[i].label+"<br>Number of Identified Files: "+data[i].value )
                .style("left", (d3.event.pageX) + "px")		
                .style("top", (d3.event.pageY - 28) + "px")
                .style("width","300px")
                .style("background","pink"); 
                })
            .on("mousemove",function(d, i) {
            div.transition()		
                .duration(200)		
                .style("opacity", .9);		
            div	.html( "Language: "+data[i].label+"<br>Number of Identified Files: "+data[i].value)
                .style("left", (d3.event.pageX) + "px")		
                .style("top", (d3.event.pageY - 28) + "px")
                .style("width","300px")
                .style("height","50px")
                .style("background","pink"); 
            })
            .on("mouseout", function() {		
                                div.transition()		
                                .duration(500)		
                                .style("opacity", 0);	});  
        //this creates the actual SVG path using the associated data (pie) with the arc drawing function

        arcs.append("svg:text")                                     //add a label to each slice
                .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                //we have to make sure to set these before calling arc.centroid
                d.innerRadius = 0;
                d.outerRadius = r;
                return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
            })
            .attr("text-anchor", "middle")                          //center the text on it's origin
            .text(function(d, i) { return data[i].value >= 0 ? data[i].label : ""; });        //get the label from our original data array
        
    </script>
  </body>
</html>

